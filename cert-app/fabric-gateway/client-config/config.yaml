version: 1.0.0

# Client section used by GO SDK
client:
  organization: Org1 # Which org is this application for?

  logging:
    level: info

# Global configuration for peer, event service and orderer timeouts
# if this this section is omitted, then default values will be used (same values as below)
#  peer:
#    timeout:
#      connection: 10s
#      response: 180s
#      discovery:
#        # Expiry period for discovery service greylist filter
#        # The channel client will greylist peers that are found to be offline
#        # to prevent re-selecting them in subsequent retries.
#        # This interval will define how long a peer is greylisted
#        greylistExpiry: 10s
#  eventService:
    # the below timeouts are commented out to use the default values that are found in
    # "pkg/fab/endpointconfig.go"
    # the client is free to override the default values by uncommenting and resetting
    # the values as they see fit in their config file
#    timeout:
#      registrationResponse: 15s
#  orderer:
#    timeout:
#      connection: 15s
#      response: 15s
#  global:
#    timeout:
#      query: 180s
#      execute: 180s
#      resmgmt: 180s
#    cache:
#      connectionIdle: 30s
#      eventServiceIdle: 2m
#      channelConfig: 30m
#      channelMembership: 30s
#      discovery: 10s
#      selection: 10m

  cryptoconfig: # Root of the MSP directories with keys and certs
    path: "${GOPATH}/src/github.com/hyperledger-fabric/test-network/organizations"

  credentialStore: # The path to store generated public key
    path: "${GOPATH}/src/github.com/hyperledger-fabric/test-network/organizations/peerOrganizations/org1.example.com/users/{username}@org1.example.com/msp/signcerts"

    cryptoStore: # Where to store the generated keystore, final path would be "$path/keystore"
      path: "${GOPATH}/src/github.com/hyperledger-fabric/test-network/organizations/peerOrganizations/org1.example.com/users/{username}@org1.example.com/msp"

organizations:
  Org1:
    mspid: Org1MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  "peerOrganizations/org1.example.com/users/{username}@org1.example.com/msp"

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca-org1

certificateAuthorities:
  ca-org1:
    url: "https://localhost:7054"
    grpcOptions: 
      verify: true
    tlsCACerts:
      path: "${GOPATH}/src/github.com/hyperledger-fabric/test-network/organizations/fabric-ca/org1/tls-cert.pem"

    registrar:
        enrollId: "admin"
        enrollSecret: "adminpw" 